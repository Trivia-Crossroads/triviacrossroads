body {
  font-weight: bold;
  text-align: center;
}

/*flexbox css and html scaffolding from https://css-tricks.com/snippets/css/a-guide-to-flexbox/*/
.wrapper {
  display: flex;
  flex-flow: row wrap;
}

/* We tell all items to be 100% width */
.header, .main, .nav, .aside, .footer {
  flex: 1 100%;
}
.header {
  background-color: silver;
  border-radius: 5px;
  font-size: 40px;
  padding-top: 10px;
}
.main {
  font-weight: normal;
  background-color: silver;
  border-radius: 5px;
  margin: 10px;
}
.aside {
  background-color: #36b0b6;
  border-radius: 5px;
  margin: 5px;
  max-width: 400px;
}
.footer {
  background-color: #36b0b6;
  border-radius: 5px;
  margin: 5px;
}
/* We rely on source order for mobile-first approach
 * in this case:
 * 1. header
 * 2. nav
 * 3. main
 * 4. aside
 * 5. footer
 */

/* Medium screens */
@media all and (min-width: 600px) {
  /* We tell both sidebars to share a row */
  .aside { flex: 1 auto; }
}

/* Large screens */
@media all and (min-width: 800px) {
  /* We invert order of first sidebar and main
   * And tell the main element to take twice as much width as the other two sidebars
   */
  .main { flex: 2 0px; }

  .aside-1 { order: 1; }
  .main    { order: 2; }
  .aside-2 { order: 3; }
  .footer  { order: 4; }
}
